// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String    @default("")
  role          String    @default("USER")
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Service {
  id          String   @id @default(uuid())
  title       String
  description String
  icon        String
  benefits    String   // Lista de beneficios del servicio separados por |
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Post {
  id          String   @id @default(uuid())
  title       String
  content     String   // Contenido largo del post
  excerpt     String   // Resumen corto para mostrar en listados
  slug        String   @unique
  image       String?  // URL de la imagen
  category    String
  published   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Message {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String?
  company   String?
  interest  String
  message   String?
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
}

model HomeContent {
  id              String   @id @default(uuid())
  heroTitle       String
  heroSubtitle    String
  teamMembers     TeamMember[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model TeamMember {
  id          String   @id @default(uuid())
  name        String
  position    String
  image       String?
  homeContent HomeContent @relation(fields: [homeContentId], references: [id])
  homeContentId String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model PageView {
  id        String   @id @default(cuid())
  path      String
  timestamp DateTime @default(now())
  userAgent String?
  ip        String?
}

model DailyStats {
  id        String   @id @default(cuid())
  date      DateTime @unique
  views     Int      @default(0)
  visitors  Int      @default(0)
}

model ContactInfo {
  id        String   @id @default("main")
  direccion String
  telefono  String
  correo    String
  horario   String
  whatsapp  String?
  telegram  String?
  linkedin  String?
  facebook  String?
  twitter   String?
  instagram String?
}
